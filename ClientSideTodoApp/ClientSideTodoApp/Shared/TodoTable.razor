
@inject HttpClient Http

<RadzenDataGrid Data="@TodoItems">
    <Columns>
        <RadzenDataGridColumn TItem="TodoItem" Property="Id" Title="Id" />
        <RadzenDataGridColumn TItem="TodoItem" Property="Person" Title="Person" />
        <RadzenDataGridColumn TItem="TodoItem" Property="Item" Title="Item" />
    </Columns>
</RadzenDataGrid>

@code {

    public IEnumerable<TodoItem> TodoItems { get; set; } = new List<TodoItem>();

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        await InitiliazeSignalR();
        await LoadNewData();
    }

    private async Task InitiliazeSignalR()
    {
        hubConnection = new HubConnectionBuilder()
           .WithUrl("https://localhost:5003/todoHub")
           .Build();

        hubConnection.On("TodoItemsSync", async () => {
            Log.Debug("Recieved sync");
            await LoadNewData();
            await InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    async Task LoadNewData()
    {
        Log.Debug("Loading Data");
        var res = await Http.GetAsync("https://localhost:5003/Todo/todo-items");
        var json = await res.Content.ReadAsStringAsync();
        Log.Debug(json);
        TodoItems = JsonSerializer.Deserialize<IEnumerable<TodoItem>>(json);
        Log.Debug("TodoItems were updated");
    }
}
